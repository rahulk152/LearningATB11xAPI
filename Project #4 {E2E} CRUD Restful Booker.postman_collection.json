{
	"info": {
		"_postman_id": "1c101b4d-d2c3-473a-a8fd-ae0fca345175",
		"name": "Project #4 {E2E} CRUD Restful Booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20033889"
	},
	"item": [
		{
			"name": "E2E Test Cases",
			"item": [
				{
					"name": "Step 1 Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"bookingid\", pm.response.json().bookingid); // Set environment variable for bookingid\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 1200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response header\",function(){\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
									"})\r",
									"\r",
									"pm.test(\"Verify that the firstname == Rahul\", function(){\r",
									"    \r",
									"    var responseJSON = pm.response.json();\r",
									"    var firstname = responseJSON[\"booking\"][\"firstname\"];\r",
									"    pm.expect(firstname).to.equal(\"Rahul\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Validate the response matches the expected schema for the booking object\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('booking');\r",
									"    pm.expect(responseData.booking).to.have.property('firstname');\r",
									"    pm.expect(responseData.booking).to.have.property('lastname');\r",
									"    pm.expect(responseData.booking).to.have.property('totalprice');\r",
									"    pm.expect(responseData.booking).to.have.property('depositpaid');\r",
									"    pm.expect(responseData.booking).to.have.property('bookingdates');\r",
									"    pm.expect(responseData.booking).to.have.property('additionalneeds');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Rahul\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/booking \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "Step 2 Verify the Booking by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Book is not null\", function(){\r",
									"    const responseData = pm.response.json();\r",
									"    var bookingid = responseData\r",
									"    pm.expect(responseData).to.not.be.null;\r",
									"\r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData).to.have.property('firstname');\r",
									"  pm.expect(responseData).to.have.property('lastname');\r",
									"  pm.expect(responseData).to.have.property('totalprice');\r",
									"  pm.expect(responseData).to.have.property('depositpaid');\r",
									"  pm.expect(responseData).to.have.property('bookingdates');\r",
									"  pm.expect(responseData).to.have.property('additionalneeds');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Checkin and checkout dates are in a valid date format\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData.bookingdates.checkin).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
									"  pm.expect(responseData.bookingdates.checkout).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is in an acceptable range\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking"
					},
					"response": []
				},
				{
					"name": "üîêStep 3 Partial Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is within acceptable range\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that the firstname == Tim\", function(){\r",
									"    \r",
									"    var responseJSON = pm.response.json();\r",
									"    var firstname = responseJSON[\"firstname\"];\r",
									"    pm.expect(firstname).to.equal(\"Tim\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=abc123"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Tim\",\r\n    \"lastname\" : \"Brown\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -X PATCH \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Accept: application/json' \\\r\n  -H 'Cookie: token=abc123' \\\r\n  -d '{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "üîêStep 4 Verify Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Fixed the test name and removed the invalid Chai property\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body have Created\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"Created\");\r",
									"\r",
									"})\r",
									"\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=abc123"
							}
						],
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -X DELETE \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Cookie: token=abc123'"
					},
					"response": []
				},
				{
					"name": "Step 5 Verify the Booking by ID after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body contains 'Not Found'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('Not Found');\r",
									"\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking"
					},
					"response": []
				}
			]
		},
		{
			"name": "Task 1",
			"item": [
				{
					"name": "Step 1 Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"bookingid\", pm.response.json().bookingid); // Set environment variable for bookingid\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 1200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response header\",function(){\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
									"})\r",
									"\r",
									"pm.test(\"Verify that the firstname == Rahul\", function(){\r",
									"    \r",
									"    var responseJSON = pm.response.json();\r",
									"    var firstname = responseJSON[\"booking\"][\"firstname\"];\r",
									"    pm.expect(firstname).to.equal(\"Rahul\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Validate the response matches the expected schema for the booking object\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('booking');\r",
									"    pm.expect(responseData.booking).to.have.property('firstname');\r",
									"    pm.expect(responseData.booking).to.have.property('lastname');\r",
									"    pm.expect(responseData.booking).to.have.property('totalprice');\r",
									"    pm.expect(responseData.booking).to.have.property('depositpaid');\r",
									"    pm.expect(responseData.booking).to.have.property('bookingdates');\r",
									"    pm.expect(responseData.booking).to.have.property('additionalneeds');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Rahul\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/booking \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "üîêStep 2 Partial Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is within acceptable range\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(800);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that the firstname == Tim\", function(){\r",
									"    \r",
									"    var responseJSON = pm.response.json();\r",
									"    var firstname = responseJSON[\"firstname\"];\r",
									"    pm.expect(firstname).to.equal(\"Tim\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=abc123"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Tim\",\r\n    \"lastname\" : \"Brown\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -X PATCH \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Accept: application/json' \\\r\n  -H 'Cookie: token=abc123' \\\r\n  -d '{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "Step 3 Verify the Booking by ID after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Book is not null\", function(){\r",
									"    const responseData = pm.response.json();\r",
									"    var bookingid = responseData\r",
									"    pm.expect(responseData).to.not.be.null;\r",
									"\r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData).to.have.property('firstname');\r",
									"  pm.expect(responseData).to.have.property('lastname');\r",
									"  pm.expect(responseData).to.have.property('totalprice');\r",
									"  pm.expect(responseData).to.have.property('depositpaid');\r",
									"  pm.expect(responseData).to.have.property('bookingdates');\r",
									"  pm.expect(responseData).to.have.property('additionalneeds');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Checkin and checkout dates are in a valid date format\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData.bookingdates.checkin).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
									"  pm.expect(responseData.bookingdates.checkout).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is in an acceptable range\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking"
					},
					"response": []
				}
			]
		},
		{
			"name": "Task 2",
			"item": [
				{
					"name": "Step 1 Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"bookingid\", pm.response.json().bookingid); // Set environment variable for bookingid\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 1200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response header\",function(){\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
									"})\r",
									"\r",
									"pm.test(\"Verify that the firstname == Rahul\", function(){\r",
									"    \r",
									"    var responseJSON = pm.response.json();\r",
									"    var firstname = responseJSON[\"booking\"][\"firstname\"];\r",
									"    pm.expect(firstname).to.equal(\"Rahul\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Validate the response matches the expected schema for the booking object\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('booking');\r",
									"    pm.expect(responseData.booking).to.have.property('firstname');\r",
									"    pm.expect(responseData.booking).to.have.property('lastname');\r",
									"    pm.expect(responseData.booking).to.have.property('totalprice');\r",
									"    pm.expect(responseData.booking).to.have.property('depositpaid');\r",
									"    pm.expect(responseData.booking).to.have.property('bookingdates');\r",
									"    pm.expect(responseData.booking).to.have.property('additionalneeds');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Rahul\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/booking \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "üîêStep 4 Verify Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Fixed the test name and removed the invalid Chai property\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body have Created\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"Created\");\r",
									"\r",
									"})\r",
									"\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=abc123"
							}
						],
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -X DELETE \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Cookie: token=abc123'"
					},
					"response": []
				},
				{
					"name": "Step 5 Verify the Booking by ID after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body contains 'Not Found'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('Not Found');\r",
									"\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking"
					},
					"response": []
				}
			]
		},
		{
			"name": "Task 3",
			"item": [
				{
					"name": "Step 1 Get All Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is within an acceptable range\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields - bookingid\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('array');\r",
									"    responseData.forEach(function (booking) {\r",
									"        pm.expect(booking).to.have.property('bookingid');\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Get booking id from the response\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    responseData.forEach(function (booking) {\r",
									"        pm.environment.set(\"bookingid\", booking.bookingid);\r",
									"        console.log(\"Booking ID: \" + booking.bookingid);\r",
									"    })\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking/1"
					},
					"response": []
				},
				{
					"name": "üîêStep 2 Partial Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Verify that the firstname == Tim\", function(){\r",
									"    \r",
									"    var responseJSON = pm.response.json();\r",
									"    var firstname = responseJSON[\"firstname\"];\r",
									"    pm.expect(firstname).to.equal(\"Tim\");\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=abc123"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Tim\",\r\n    \"lastname\" : \"Brown\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -X PATCH \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Accept: application/json' \\\r\n  -H 'Cookie: token=abc123' \\\r\n  -d '{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "Step 3 Verify the Booking by ID after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify Book is not null\", function(){\r",
									"    const responseData = pm.response.json();\r",
									"    var bookingid = responseData\r",
									"    pm.expect(responseData).to.not.be.null;\r",
									"\r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData).to.have.property('firstname');\r",
									"  pm.expect(responseData).to.have.property('lastname');\r",
									"  pm.expect(responseData).to.have.property('totalprice');\r",
									"  pm.expect(responseData).to.have.property('depositpaid');\r",
									"  pm.expect(responseData).to.have.property('bookingdates');\r",
									"  pm.expect(responseData).to.have.property('additionalneeds');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Checkin and checkout dates are in a valid date format\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData.bookingdates.checkin).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
									"  pm.expect(responseData.bookingdates.checkout).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is in an acceptable range\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -i https://restful-booker.herokuapp.com/booking"
					},
					"response": []
				}
			]
		},
		{
			"name": "Task 4",
			"item": [
				{
					"name": "Step 1 Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"bookingid\", pm.response.json().bookingid); // Set environment variable for bookingid\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 1200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response header\",function(){\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
									"})\r",
									"\r",
									"pm.test(\"Verify that the firstname == Rahul\", function(){\r",
									"    \r",
									"    var responseJSON = pm.response.json();\r",
									"    var firstname = responseJSON[\"booking\"][\"firstname\"];\r",
									"    pm.expect(firstname).to.equal(\"Rahul\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Validate the response matches the expected schema for the booking object\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('booking');\r",
									"    pm.expect(responseData.booking).to.have.property('firstname');\r",
									"    pm.expect(responseData.booking).to.have.property('lastname');\r",
									"    pm.expect(responseData.booking).to.have.property('totalprice');\r",
									"    pm.expect(responseData.booking).to.have.property('depositpaid');\r",
									"    pm.expect(responseData.booking).to.have.property('bookingdates');\r",
									"    pm.expect(responseData.booking).to.have.property('additionalneeds');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Rahul\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/booking \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "üîêStep 4 Verify Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Fixed the test name and removed the invalid Chai property\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body have Created\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"Created\");\r",
									"\r",
									"})\r",
									"\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=abc123"
							}
						],
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -X DELETE \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Cookie: token=abc123'"
					},
					"response": []
				}
			]
		},
		{
			"name": "Task 5",
			"item": [
				{
					"name": "Step 1 Invalid Json Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 1200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate the response matches the expected schema for the booking object\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('booking');\r",
									"    pm.expect(responseData.booking).to.have.property('firstname');\r",
									"    pm.expect(responseData.booking).to.have.property('lastname');\r",
									"    pm.expect(responseData.booking).to.have.property('totalprice');\r",
									"    pm.expect(responseData.booking).to.have.property('depositpaid');\r",
									"    pm.expect(responseData.booking).to.have.property('bookingdates');\r",
									"    pm.expect(responseData.booking).to.have.property('additionalneeds');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/booking \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
					},
					"response": []
				}
			]
		},
		{
			"name": "Task 6",
			"item": [
				{
					"name": "Step 1 Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"bookingid\", pm.response.json().bookingid); // Set environment variable for bookingid\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 1200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response header\",function(){\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
									"})\r",
									"\r",
									"pm.test(\"Verify that the firstname == Rahul\", function(){\r",
									"    \r",
									"    var responseJSON = pm.response.json();\r",
									"    var firstname = responseJSON[\"booking\"][\"firstname\"];\r",
									"    pm.expect(firstname).to.equal(\"Rahul\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Validate the response matches the expected schema for the booking object\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('booking');\r",
									"    pm.expect(responseData.booking).to.have.property('firstname');\r",
									"    pm.expect(responseData.booking).to.have.property('lastname');\r",
									"    pm.expect(responseData.booking).to.have.property('totalprice');\r",
									"    pm.expect(responseData.booking).to.have.property('depositpaid');\r",
									"    pm.expect(responseData.booking).to.have.property('bookingdates');\r",
									"    pm.expect(responseData.booking).to.have.property('additionalneeds');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Rahul\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Generated from cURL: curl -X POST \\\r\n  https://restful-booker.herokuapp.com/booking \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "üîêStep 4 Verify Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Fixed the test name and removed the invalid Chai property\r",
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response body have Created\", function(){\r",
									"    pm.expect(pm.response.text()).to.include(\"Created\");\r",
									"\r",
									"})\r",
									"\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=abc123"
							}
						],
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -X DELETE \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Cookie: token=abc123'"
					},
					"response": []
				},
				{
					"name": "üîêStep 2 Partial Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 405\", function () {\r",
									"  pm.response.to.have.status(405);\r",
									"});\r",
									"pm.test(\"Response body contains 'Method Not Allowed'\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Method Not Allowed\");\r",
									"\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=abc123"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Tim\",\r\n    \"lastname\" : \"Brown\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingid}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingid}}"
							]
						},
						"description": "Generated from cURL: curl -X PATCH \\\r\n  https://restful-booker.herokuapp.com/booking/1 \\\r\n  -H 'Content-Type: application/json' \\\r\n  -H 'Accept: application/json' \\\r\n  -H 'Cookie: token=abc123' \\\r\n  -d '{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}'"
					},
					"response": []
				}
			]
		}
	]
}